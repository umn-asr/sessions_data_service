# Name of your application. Used to uniquely configure containers.
service: sessions

# Name of the container image.
image: sessions_data_service

# Deploy to these servers.
servers:
  web:
    labels:
      traefik.enable: true
      traefik.http.routers.sessions-web.entrypoints: "websecure"
      traefik.docker.network: "traefik"
      traefik.http.routers.sessions-web.tls: true
      traefik.http.routers.sessions-web.tls.certresolver: "sectigo"
      traefik.http.routers.sessions-web.middlewares: "maintenance-mode@file"
    options:
      network: "traefik"

# Credentials for your image host.
registry:
  server: asr-docker-local.artifactory.umn.edu
  username: asrweb
  password:
    - ARTIFACTORY_IDENTITY_TOKEN

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    VAULT_ADDR: https://hcp-vault-public-vault-fc507e0d.5d5b1f21.z1.hashicorp.cloud:8200
  secret:
    - VAULT_WRAPPED_SECRET

# Use a different ssh user than root
ssh:
  user: sessions

# Configure builder setup.
builder:
  dockerfile: Dockerfile
  remote:
    arch: amd64
  args:
    GID: 3002
    GIT_COMMIT: <%= %x(git rev-parse --short --verify HEAD) %>
    UID: 3002
  target: production

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /up
  max_attempts: 15
  interval: 20s

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
primary_role: web
